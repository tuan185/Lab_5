/*
 * LList.c
 *
 *  Created on: Nov 16, 2023
 *      Author: Admin
 */
#include "LList.h"

struct Node* createNode(Task_TypeDef_t data){
	struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
	if(!newNode){
		//TODO
	}
	newNode->head.callback = data.callback;
	newNode->head.Delay = data.Delay;
	newNode->head.Period = data.Period;
	newNode->nextNode = NULL;
	return newNode;
};

//Task_TypeDef_t* getTask(uint8_t index, struct Node* head){
//	uint8_t cur_index = 0;
//	struct Node* temp = head;
//	while(cur_index < index && temp != NULL){
//		cur_index++;
//		temp = temp->nextNode;
//	}
//	if(temp != NULL){
//		return *temp;
//	}
//	return 0;
//};

struct Node* addTask(struct Node* head, Task_TypeDef_t data){
	uint8_t cur_index = 0;
	struct Node* temp = head;
	if(temp != NULL && temp->Delay > data.Delay){
		newHead =
	}

};
void deleteTask(uint8_t index){

};
uint8_t findTask(CALLBACK callback){

};
