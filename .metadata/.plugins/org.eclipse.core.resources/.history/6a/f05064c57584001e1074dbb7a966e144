/*
 * LList.c
 *
 *  Created on: Nov 16, 2023
 *      Author: Admin
 */
#include "LList.h"

struct Node* createNode(CALLBACK callback, uint16_t Delay, uint16_t Period){
	struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
	if(!newNode){
		//TODO
	}
	newNode->head.callback = callback;
	newNode->head.Delay = Delay;
	newNode->head.Period = Period;
	newNode->nextNode = NULL;
	return newNode;
};

CALLBACK getTask(uint8_t index, struct Node* head){
	uint8_t cur_index = 0;
	struct Node* temp = head;
	while(cur_index < index && temp != NULL){
		cur_index++;
		temp = temp->nextNode;
	}
	if(temp != NULL){
		return temp->head.callback;
	}
	return 0;
};

void addTask(CALLBACK callback, uint16_t Delay, uint16_t Period){

};
void deleteTask(uint8_t index){

};
uint8_t findTask(CALLBACK callback){

};
